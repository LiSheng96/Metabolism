# Collated code
import pandas as pd
import xlsxwriter as xw
import os
os.chdir("D:\SL\\UCLA\Classes\M200\Rotation in Ajit's Lab!\data\GCMS\Methos compare")
# Change to your own directory with your file
glut = pd.read_excel(r"6142019-new method.xlsx", header=None)
# Change to your own file name


glut.fillna(0, inplace=True)
#fill NA with 0

TIC = xw.Workbook('TIC.xlsx') #create a xlsx file, it will save to your working directory
worksheet = TIC.add_worksheet("TIC") #create a worksheet named TIC
#worksheet.write(row, column, item) 

Norvaline260 = []
Norvaline288 = []

for nsample in range(1,glut.shape[1]): #shape has numbers of rows([0]) and columns([1])
    worksheet.write(0, nsample, glut[nsample][0])
    MetaSum = glut[nsample][1]
    nrow = 1
    for i in range(1,glut.shape[0]-1):
        if (glut[0][i][:-4]==glut[0][i+1][:-4]): 
            #compare string without (M0123456), which means the same metabolite
            
            MetaName = glut[0][i][:-4]
            MetaSum = MetaSum + glut[nsample][i+1]

        elif ("Name" in glut[0][i+1]) or("Resp." in glut[0][i+1]) :

            continue
        else :
            if "Norvaline 260" in MetaName:
                Norvaline260.append(MetaSum) #Save Norvaine to a list for normalization
                
            elif "Norvaline 288" in MetaName:
                Norvaline288.append(MetaSum) #Save Norvaine to a list for normalization
                
            worksheet.write(nrow, 0, MetaName)
            worksheet.write(nrow, nsample, MetaSum)
            MetaSum = glut[nsample][i+1]
            nrow += 1

    worksheet.write(nrow, 0, MetaName)
    worksheet.write(nrow, nsample, MetaSum)
    MetaSum = 0
TIC.close()

TICpd = pd.read_excel(r"TIC.xlsx", header=None)
#read the file we just created
TICNorvaline = xw.Workbook('TICNorvaline.xlsx') 
worksheet2 = TICNorvaline.add_worksheet("TICNorvaline") 
#create another file

for nsample2 in range(1,TICpd.shape[1]):
    worksheet2.write(0, nsample2, TICpd[nsample2][0])
    MetaSum = TICpd[nsample2][1]
    for i in range(1,TICpd.shape[0]): #row number
        if Norvaline[nsample2-1] == 0: #or cannot be divided
            break
        else :
            worksheet2.write(i, 0, TICpd[0][i])
            worksheet2.write(i, nsample2, (TICpd[nsample2][i]/Norvaline260[nsample2-1]+TICpd[nsample2][i]/Norvaline288[nsample2-1])/2*100)
TICNorvaline.close()
